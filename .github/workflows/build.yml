on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java-version: [1.8, 11]
        targets:
          - "__.publishLocal testRepo"
          - "core.__.test"
          - "itest[0.10.0].test"
          - "itest[0.9.12].test"
          - "itest[0.9.11].test"
          - "itest[0.9.10].test"
          - "itest[0.9.9].test"
          - "itest[0.9.8].test"
          - "itest[0.9.7].test"
          - "itest[0.9.6].test"
          - "itest[0.9.5].test"
          - "itest[0.9.4].test"
          - "itest[0.9.3].test"
          - "itest[0.8.0].test"
          - "itest[0.7.4].test"
          - "itest[0.7.3].test"
          - "itest[0.7.2].test"
          - "itest[0.7.1].test"
          - "itest[0.7.0].test"
          - "itest[0.6.3].test"
          - "itest[0.6.2].test"
          - "itest[0.6.1].test"
          - "itest[0.6.0].test"

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.os == 'windows-latest' }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - run: ./millw -i -k ${{ matrix.targets }}
        if: matrix.os != 'windows-latest'
      - run: .\millw.bat -i -k ${{ matrix.targets }}
        if: matrix.os == 'windows-latest'

      - run: ./millw -i -j 0 -k __.scoverage.xmlReport
        if: matrix.os != 'windows-latest'
      - run: ./millw.bat -i -j 0 -k __.scoverage.xmlReport
        if: matrix.os == 'windows-latest'

      - name: Upload scoverage reports to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: ./out/*/scoverage/xmlReport/dest/scoverage.xml
        continue-on-error: true

  publish:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    # only run one publish job for the same sha at the same time
    # e.g. when a main-branch push is also tagged
    concurrency: publish-${{ github.sha }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup GPG secrets
        run: |
          gpg --version
          cat <(echo "${{ secrets.GPG_SECRET_KEY }}") | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish to Maven Central
        run: ./millw -i mill.scalalib.PublishModule/publishAll --sonatypeCreds "${{ secrets.SONATYPE_CREDS }}" --gpgArgs "--passphrase=${{ secrets.GPG_SECRET_KEY_PASS}},--batch,--yes,-a,-b,--pinentry-mode,loopback" --publishArtifacts __.publishArtifacts --readTimeout 600000 --awaitTimeout 600000 --release true --signed true
